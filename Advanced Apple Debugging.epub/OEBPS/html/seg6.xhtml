<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <link rel="stylesheet" type="text/css" href="dbg.css"/>
  <title>Introduction</title>
</head>
<body class="segment-chapter">

<!-- metadata: nil  -->


<h1 class="segment-chapter">Introduction</h1>

<p>Debugging has a rather bad reputation. I mean, if the developer had a complete understanding of the program, there wouldn’t be any bugs and they wouldn’t be debugging in the first place, right?
</p>
<p><i>Don’t think like that</i>.
</p>
<p>There are always going to be bugs in your software — or any software, for that matter. No amount of test coverage imposed by your product manager is going to fix that. In fact, viewing debugging as <i>just</i> a process of fixing something that’s broken is actually a poisonous way of thinking that will mentally hinder your analytical abilities.
</p>
<p>Instead, you should view debugging as simply <em>a process to better understand a program</em>. It’s a subtle difference, but if you truly believe it, any previous drudgery of debugging simply disappears.
</p>
<p>The same negative connotation can also be applied to reverse engineering software. Images of masked hackers stealing bank accounts and credit cards may come to mind, but for this book, reverse engineering really is just debugging without source code — which in turn helps you gain a better understanding of a program or system.
</p>
<p>There&apos;s nothing wrong with reverse engineering in itself. In fact if debugging was a game, then reverse engineering is simply debugging on the “difficult” setting — which is quite a fun setting if you’ve been playing the game for a while. :]
</p>
<p>In this book, you&apos;ll come to realize debugging is an enjoyable process to help you better understand software. Not only will you learn to find bugs faster, but you’ll also learn how other developers have solved problems similar to yours. You&apos;ll also learn how to create custom, powerful debugging scripts that will help you quickly find answers to any item that piques your interest, whether it’s in your code — or someone else’s.
</p>
<h2 class="segment-chapter">What you need</h2>

<p>To follow along with the tutorials in this book, you’ll need the following:
</p>
<ul>
<li>
<p>A Mac running <em>High Sierra</em> (10.13) or later. Earlier versions might work, but they&apos;re untested.
</p></li>

<li>
<p><em>Xcode 9.1 or later.</em> Packaged with Xcode is the latest and greatest version of <em>LLDB</em>, the debugger you’ll use extensively throughout this book. At the time of this writing, the version of LLDB packaged with Xcode is <em>lldb-900.0.57</em>.
</p></li>

<li>
<p><em>Python 2.7</em>. LLDB uses Python 2.7 to run its Python scripts. Fortunately, Python 2.7 automatically ships with macOS, as well as with Xcode. You can verify you have the correct version installed by typing <code>python --version</code> in <code>Terminal</code>.
</p></li>

<li>
<p><em>A 64 bit iOS device running iOS 10 or later, and a paid membership to the iOS development program </em><em>[</em><em>optional</em><em>]</em>. For most chapters in the book, you can run any iOS programs in the Simulator. However, you’ll get more out of this book by using a 64-bit iOS device to test out certain ideas or suggestions littered throughout the book.
</p></li>
</ul>

<p>Once you have these items in place, you’ll be able to follow along with almost every chapter in this book. For certain sections, you&apos;ll need to disable the <em>Rootless</em> security feature in order to use some of the tools (i.e. <em>DTrace</em>). This is discussed in Chapter 1.
</p>
<h2 class="segment-chapter">Who this book is for</h2>

<p>The art of debugging code should really be studied by every developer. However, there will be some of you that will get more out of this book. This book is written for:
</p>
<ul>
<li>
<p>Developers who want to become better at debugging with LLDB
</p></li>

<li>
<p>Developers who want to build complex debugging commands with LLDB
</p></li>

<li>
<p>Developers who want to take a deeper dive into internals of Swift and Objective-C
</p></li>

<li>
<p>Developers who are interested in understanding what they can do to their program through reverse engineering
</p></li>

<li>
<p>Developers who are interested in modern, proactive reverse engineering strategies
</p></li>

<li>
<p>Developers who want to be confident in finding answers to questions they have about their computer or software
</p></li>
</ul>

<p>This book is for intermediate to advanced developers who want to take their debugging and code exploration game to the next level.
</p>
<h2 class="segment-chapter">Book source code and forums</h2>

<p>This book comes with the source code, Python scripts, starter and completed projects for each chapter. These resources are shipped with the PDF.
</p>
<p>We’ve also set up an official forum for the book at <a href="http://forums.raywenderlich.com">forums.raywenderlich.com</a>. This is a great place to ask questions about the book, discuss debugging strategies or to submit any errors you may find.
</p>
<h2 class="segment-chapter">Book updates</h2>

<p>Great news: since you purchased the PDF version of this book, you’ll receive free updates of the book’s content!
</p>
<p>The best way to receive update notifications is to sign up for our weekly newsletter. This includes a list of the tutorials published on raywenderlich.com in the past week, important news items such as book updates or new books, and a few of our favorite developer links. Sign up here:
</p>
<ul>
<li>
<p><a href="http://www.raywenderlich.com/newsletter">www.raywenderlich.com/newsletter</a>
</p></li>
</ul>

<h2 class="segment-chapter">Custom LLDB scripts repo</h2>

<p>Finally, you can find a repo of interesting LLDB Python scripts here:
</p>
<p><a href="https://github.com/DerekSelander/LLDB">https://github.com/DerekSelander/LLDB</a>
</p>
<p>These scripts will help aid in your debugging/reverse engineering sessions and provide novel ideas for your own LLDB scripts.
</p>
<h2 class="segment-chapter">License</h2>

<p>By purchasing <i>Advanced Apple Debugging </i><i>&amp;</i><i> Reverse Engineering</i>, you have the following license:
</p>
<ul>
<li>
<p>You&apos;re allowed to use and/or modify the source code in <i>Advanced Apple Debugging </i><i>&amp;</i><i> Reverse Engineering</i> in as many applications as you want, with no attribution required.
</p></li>

<li>
<p>You&apos;re allowed to use and/or modify all art, images, or designs that are included in <i>Advanced Apple Debugging </i><i>&amp;</i><i> Reverse Engineering</i> in as many applications as you want, but must include this attribution line somewhere inside your game: “Artwork/images/designs: from the <i>Advanced Apple Debugging </i><i>&amp;</i><i> Reverse Engineering</i> book, available at <a href="http://www.raywenderlich.com">www.raywenderlich.com</a>”.
</p></li>

<li>
<p>The source code included in <i>Advanced Apple Debugging </i><i>&amp;</i><i> Reverse Engineering</i> is for your own personal use only. You&apos;re <em>NOT</em> allowed to distribute or sell the source code in <i>Advanced Apple Debugging </i><i>&amp;</i><i> Reverse Engineering</i> without prior authorization.
</p></li>

<li>
<p>This book is for your own personal use only. You&apos;re <em>NOT</em> allowed to sell this book without prior authorization, or distribute it to friends, co-workers, or students; they must to purchase their own copy instead.
</p></li>
</ul>

<p>All materials provided with this book are provided on an “as is” basis, without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.
</p>
<p>All trademarks and registered trademarks appearing in this guide are the property of their respective owners.
</p>
<h2 class="segment-chapter">Acknowledgments</h2>

<p>We would like to thank many people for their assistance in making this possible:
</p>
<ul>
<li>
<p><em>Our families:</em> For bearing with us in this crazy time as we worked all hours of the night to get this book ready for publication!
</p></li>

<li>
<p><em>Everyone at Apple:</em> For developing an amazing platform, for constantly inspiring us to improve our games and skill sets and for making it possible for many developers to make a living doing what they love!
</p></li>

<li>
<p><em>And most importantly, the readers of raywenderlich.com — especially you</em><em>!</em> Thank you so much for reading our site and purchasing this book. Your continued readership and support is what makes all of this possible!
</p></li>
</ul>

<h2 class="segment-chapter">About the cover</h2>

<p>The Wana (pronounced “vah-na”) is a sea urchin native to the Indo-West Pacific region. This sea urchin has two types of spines: a longer hollow spine and a shorter, toxin producing spine. The Wana contains light-sensitive nerves on its skin which can detect potential threats and can move its spines accordingly towards the threat.
</p>
<p>Much like finding bugs in a program, stepping on one of these creatures really, really sucks. Pain settles in (inflicted by either your product manager or the sea urchin) and can last up to several hours, even though the issue may remain for an extended period of time. In addition, just like bugs in a program, if you find one of these lovely creatures, there are usually many more in close proximity!
</p></body></html>
